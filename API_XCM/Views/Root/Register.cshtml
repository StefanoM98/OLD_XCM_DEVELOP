@using API_XCM.Models.XCM
@model RegisterViewModel
@using System.Web.UI.WebControls
@using API_XCM.Code

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";

}

@section Head {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/login/SignInRegister.css")" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/SignInRegister.js")"></script>
}

@functions{
    private void AssignTextBoxSettings(TextBoxSettings s)
    {
        s.Width = Unit.Percentage(100);
        s.ShowModelErrors = true;
        s.Properties.ValidationSettings.Display = Display.Dynamic;
        s.Properties.ValidationSettings.SetFocusOnError = true;
        s.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
        s.Properties.ValidationSettings.ErrorFrameStyle.Wrap = DefaultBoolean.True;
    }
}

<div class="formLayout-verticalAlign">
    <div class="formLayout-container">

        @using (Html.BeginForm("Register", "Root", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.DevExpress().FormLayout(settings =>
       {
           settings.Name = "formLayout";
           settings.UseDefaultPaddings = false;
           settings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
           settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
           settings.Styles.LayoutGroup.Cell.Paddings.Padding = Unit.Pixel(0);
           settings.Styles.LayoutItem.Paddings.PaddingBottom = Unit.Pixel(8);

           var groupItem = settings.Items.AddGroupItem(i =>
           {
               i.ShowCaption = DefaultBoolean.False;
               i.GroupBoxDecoration = GroupBoxDecoration.None;
               i.Paddings.Padding = Unit.Pixel(16);

           });

           groupItem.Items.Add(i =>
           {
               i.FieldName = "";
               i.Caption = "";
               i.SetNestedContent("<div align=\"center\"><img width=\"300px\" src=\"" + @Url.Content("~/Content/Image/LogoXCM1920.png") + "\"/></div>");
               //i.NestedExtension().Image(img =>
               //{
               //    img.ImageUrl = "~/Content/Image/LogoXCM1920.png";
               //    img.Width = 200;

               //});
           });

           groupItem.Items.Add(m => m.UserName, i =>
           {
               i.NestedExtension().TextBox(s =>
               {
                   AssignTextBoxSettings(s);
                   s.Properties.ClientSideEvents.Init = "function(s, e){ s.Focus(); }";
               });
           });

           groupItem.Items.Add(m => m.FirstName, i =>
           {
               i.NestedExtension().TextBox(s =>
               {
                   AssignTextBoxSettings(s);
               });
           });
           groupItem.Items.Add(m => m.LastName, i =>
           {
               i.NestedExtension().TextBox(s =>
               {
                   AssignTextBoxSettings(s);
               });
           });
           groupItem.Items.Add(m => m.Email, i =>
           {
               i.NestedExtension().TextBox(s =>
               {
                   AssignTextBoxSettings(s);
               });
           });

           groupItem.Items.Add(i =>
           {
               i.FieldName = "Role_ID";
               i.NestedExtension().ComboBox(c =>
               {
                   c.Properties.TextField = "Role_ID";
                   //c.Properties.ValueField = "Role_ID";
                   //c.Properties.ValueType = typeof(long);
                   c.Properties.DataSource = AuthHelper.GetRoles();
               });
           });

           groupItem.Items.Add(i =>
           {
               i.FieldName = "Customer_ID";

               i.NestedExtension().ComboBox(c =>
               {
                   c.Properties.TextField = "Customer_ID";
                   //c.Properties.ValueField = "Customer_ID";
                   //c.Properties.ValueType = typeof(string);
                   c.Properties.DataSource = AuthHelper.GetCustomers();
               });
           });

           groupItem.Items.Add(m => m.Password, i =>
           {
               i.NestedExtension().ButtonEdit(s =>
               {
                   s.Width = Unit.Percentage(100);
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.Display = Display.Dynamic;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                   s.Properties.ValidationSettings.ErrorFrameStyle.Wrap = DefaultBoolean.True;

                   s.Properties.Password = true;
                   s.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   s.Properties.ClientSideEvents.ButtonClick = "onPasswordButtonEditButtonClick";

                   s.Properties.ButtonStyle.Border.BorderWidth = Unit.Pixel(0);
                   s.Properties.ButtonStyle.Width = Unit.Pixel(6);
                   s.Properties.ButtonStyle.CssClass = "eye-button";
                   s.Properties.ButtonStyle.HoverStyle.BackColor = System.Drawing.Color.Transparent;
                   s.Properties.ButtonStyle.PressedStyle.BackColor = System.Drawing.Color.Transparent;

                   s.SetButtonTemplateContent("<div></div>");
                   s.Properties.Buttons.Add();
               });
           });

           groupItem.Items.Add(m => m.ConfirmPassword, i =>
           {
               i.NestedExtension().ButtonEdit(s =>
               {
                   s.Width = Unit.Percentage(100);
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.Display = Display.Dynamic;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                   s.Properties.ValidationSettings.ErrorFrameStyle.Wrap = DefaultBoolean.True;

                   s.Properties.Password = true;
                   s.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   s.Properties.ClientSideEvents.ButtonClick = "onPasswordButtonEditButtonClick";

                   s.Properties.ButtonStyle.Border.BorderWidth = Unit.Pixel(0);
                   s.Properties.ButtonStyle.Width = Unit.Pixel(6);
                   s.Properties.ButtonStyle.CssClass = "eye-button";
                   s.Properties.ButtonStyle.HoverStyle.BackColor = System.Drawing.Color.Transparent;
                   s.Properties.ButtonStyle.PressedStyle.BackColor = System.Drawing.Color.Transparent;

                   s.SetButtonTemplateContent("<div></div>");
                   s.Properties.Buttons.Add();
               });
           });

           groupItem.Items.Add(itemSettings =>
           {
               itemSettings.ShowCaption = DefaultBoolean.False;
               itemSettings.Visible = ViewBag.GeneralError != null;
               itemSettings.SetNestedContent(() =>
               {
                   ViewContext.Writer.Write("<div class=\"formLayout-generalErrorText\">" + @ViewBag.GeneralError + "</div>");
               });
           });

           groupItem = settings.Items.AddGroupItem(i =>
           {
               i.ShowCaption = DefaultBoolean.False;
               i.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
               i.Paddings.PaddingTop = Unit.Pixel(13);
               i.Paddings.PaddingBottom = Unit.Pixel(13);
               i.GroupBoxStyle.CssClass = "formLayout-groupBox";
           });
           groupItem.Items.Add(i =>
           {
               i.ShowCaption = DefaultBoolean.False;
               i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
               i.Paddings.Padding = Unit.Pixel(0);
               i.NestedExtension().Button(s =>
               {
                   s.Name = "RegisterButton";
                   s.Width = Unit.Pixel(200);
                   s.Text = "Registrati";
                   s.UseSubmitBehavior = true;
               });
           });

       }).GetHtml()
        }
    </div>
</div>